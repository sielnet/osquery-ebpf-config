{
    "options": {
        "disable_events": false,
        "enable_file_events": true,
        "enable_bpf_events": true,
        "schedule_splay_percent": 10,
        "events_expiry": 3600,
        "schedule_default_interval": 3600
  },
  "platform": "linux",
  "schedule": {
    "file_events": {
      "query": "SELECT target_path, sha1, time, action, mode, gid, uid  FROM file_events;",
      "interval": 3600,
      "description": "File events collected from file integrity monitoring",
      "removed":false
    },
    "kernel_info": {
      "query": "SELECT * FROM kernel_info;",
      "interval": 86400,
      "description": "Retrieves information from the current kernel in the target system.",
      "snapshot": true
    },
    "kernel_integrity": {
      "query": "SELECT * FROM kernel_integrity;",
      "interval": 86400,
      "description": "Various Linux kernel integrity checked attributes."
    },
    "kernel_modules": {
      "query": "SELECT * FROM kernel_modules;",
      "interval": 3600,
      "description": "Linux kernel modules both loaded and within the load search path."
    },
    "kernel_modules_snapshot": {
      "query": "SELECT * FROM kernel_modules;",
      "interval": 86400,
      "description": "Linux kernel modules both loaded and within the load search path.",
      "snapshot": true
    },
    "last": {
      "query": "SELECT * FROM last;",
      "interval": 3600,
      "description": "Retrieves the list of the latest logins with PID, username and timestamp."
    },
    "listening_ports": {
      "query": "SELECT pid, port, processes.path, cmdline, cwd FROM listening_ports JOIN processes USING (pid) WHERE port!=0;",
      "interval": 86400,
      "description": "Gather information about processes that are listening on a socket.",
      "snapshot": true
    },
    "shell_history": {
      "query": "SELECT * FROM users CROSS JOIN shell_history USING (uid);",
      "interval": 3600,
      "description": "Record shell history for all users on system (instead of just root)"
    },
    "ld_preload": {
      "query": "SELECT process_envs.pid, process_envs.key, process_envs.value, processes.name, processes.path, processes.cmdline, processes.cwd FROM process_envs join processes USING (pid) WHERE key = 'LD_PRELOAD';",
      "interval": 60,
      "description": "Any processes that run with an LD_PRELOAD environment variable"
    },
    "behavioral_reverse_shell": {
      "query": "SELECT DISTINCT(processes.pid), processes.parent, processes.name, processes.path, processes.cmdline, processes.cwd, processes.root, processes.uid, processes.gid, processes.start_time, process_open_sockets.remote_address, process_open_sockets.remote_port, (SELECT cmdline FROM processes AS parent_cmdline WHERE pid=processes.parent) AS parent_cmdline FROM processes JOIN process_open_sockets USING (pid) LEFT OUTER JOIN process_open_files ON processes.pid = process_open_files.pid WHERE (name='sh' OR name='bash') AND remote_address NOT IN ('0.0.0.0', '::', '') AND remote_address NOT LIKE '127.0.0.%';",
      "interval": 600,
      "description": "Find shell processes that have open sockets"
    },
    "crontab": {
      "query": "SELECT * FROM crontab;",
      "interval": 3600,
      "description": "Retrieves all the jobs scheduled in crontab in the target system."
    },
    "startup_items": {
      "query": "select * from startup_items where status='active';",
      "interval": 3600,
      "description": "Retrieves all active startup items in the target system."
    },
    "ld_so_preload_exists": {
      "query": "SELECT * FROM file WHERE path='/etc/ld.so.preload' AND path!='';",
      "interval": 3600,
      "description": "Generates an event if ld.so.preload is present - used by rootkits such as Jynx"
    },
    "system_running_processes": {
      "query": "select pr.pid, pr.name, usr.username, pr.path, pr.cmdline from processes pr LEFT JOIN users usr ON pr.uid = usr.uid WHERE pr.cmdline != '';",
      "interval": 3600,
      "description": "List Linux System running processes with CMDLINE not null. - ATT&CK T1059,T1108,T1166,T1100,T1064,T1107,T1003,T1033,T1016,T1082,T1057,T1201,T1083,T1217,T1087,T1072,T1002"
    },
    "process_open_sockets": {
      "query": "select DISTINCT p.name, p.path, pos.remote_address, pos.remote_port from process_open_sockets pos LEFT JOIN processes p ON pos.pid = p.pid WHERE pos.remote_port != 0 AND p.name != '';",
      "interval": 3600,
      "description": "Returns the network connections from system processes - ATT&CK T1108,T1100,T1102,T1105,T1039,T1029,T1011,T1041,T1043,T1090,T1094,T1048,T1132,T1020,T1065,T1001,T1071,T1219,T1104,T1008",
      "removed": false
    },
    "sudoers": {
      "query": "select * from sudoers;",
      "interval": 3600,
      "description": "Linux sudoers information - ATT&CK T1169,T1206"
    },
    "suid_bin": {
      "query": "SELECT * FROM suid_bin;",
      "interval": 86400,
      "description": "Display any SUID binaries that are owned by root"
    }
  },
  "file_paths": {
    "configuration": [
      "/etc/bash.bashrc"
      "/etc/cron.%/%%",
      "/etc/cron%/%%",
      "/etc/crontab",
      "/etc/init.d/%%",
      "/etc/ld.so.conf",
      "/etc/ld.so.conf.d/%%",
      "/etc/ld.so.preload",
      "/etc/modules",
      "/etc/pam.d/%%",
      "/etc/passwd",
      "/etc/profile",
      "/etc/profile.d/%%",
      "/etc/rc%/%%",
      "/etc/shadow",
      "/etc/shells",
      "/etc/systemd/%%",
      "/lib/systemd/%%",
      "/usr/lib/systemd/%%",
    ],
    "binaries": [
      "/usr/bin/%%",
      "/usr/sbin/%%",
      "/bin/%%",
      "/sbin/%%",
      "/usr/local/bin/%%",
      "/usr/local/sbin/%%"
    ]
  },
  "events": {
    "disable_subscribers": ["user_events"]
  },
  "packs": {
#    "ossec-rootkit": "/usr/share/osquery/packs/ossec-rootkit.conf"
  }
}
